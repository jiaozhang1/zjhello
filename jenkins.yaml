plugins:
  sites:
  - id: "default"
    url: "https://updates.jenkins.io/update-center.json"
jenkins:
  agentProtocols:
  - "JNLP2-connect"
  - "JNLP3-connect"
  - "JNLP4-connect"
  - "Ping"
  authorizationStrategy:
    loggedInUsersCanDoAnything:
      allowAnonymousRead: false
  clouds:
  - kubernetes:
      containerCapStr: "10"
      jenkinsTunnel: "10.100.10.79:50000"
      jenkinsUrl: "http://10.100.10.79:8080/"
      labels: "{jenkins=slave}"
      maxRequestsPerHostStr: "32"
      name: "kubernetes"
      templates:
      - containers:
        - args: "${computer.jnlpmac} ${computer.name}"
          image: "index.alauda.cn/alaudaorg/jenkins-node-all-alpine:e9326232a5f25aa323c610d8895d55de961fe6ed"
          livenessProbe:
            failureThreshold: 0
            initialDelaySeconds: 0
            periodSeconds: 0
            successThreshold: 0
            timeoutSeconds: 0
          name: "jnlp"
        label: "all node master golang"
        name: "all"
        namespace: "default-1"
        nodeUsageMode: "NORMAL"
        volumes:
        - hostPathVolume:
            hostPath: "/var/run/docker.sock"
            mountPath: "/var/run/docker.sock"
        workspaceVolume:
          emptyDirWorkspaceVolume:
            memory: false
        - name: "java"
          label: "java"
          containers:
            - name: "java"
              image: "index.alauda.cn/alaudaorg/jenkins-node-java:latest"
              workingDir: "/home/jenkins"
              command: "/bin/sh -c"
              args: "cat"
              ttyEnabled: true
            - name: "tools"
              image: "index.alauda.cn/alaudaorg/jenkins-node-java:latest"
              workingDir: "/home/jenkins"
              command: "/bin/sh -c"
              args: "cat"
              ttyEnabled: true
          volumes:
            - hostPathVolume:
                hostPath: "/var/run/docker.sock"
                mountPath: "/var/run/docker.sock"
            - hostPathVolume:
                hostPath: "/Users/mac/.m2/repository/"
                mountPath: "/data/.m2/"
          idleMinutes: "30"
        - name: "golang"
          label: "golang"
          containers:
            - name: "golang"
              image: "index.alauda.cn/alaudaorg/jenkins-node-golang:latest"
              workingDir: "/home/jenkins"
              command: "/bin/sh -c"
              args: "cat"
              ttyEnabled: true
            - name: "tools"
              image: "index.alauda.cn/alaudaorg/jenkins-node-java:latest"
              workingDir: "/home/jenkins"
              command: "/bin/sh -c"
              args: "cat"
              ttyEnabled: true
          volumes:
            - hostPathVolume:
                hostPath: "/var/run/docker.sock"
                mountPath: "/var/run/docker.sock"
  crumbIssuer:
    standard:
      excludeClientIPFromCrumb: true
  disableRememberMe: false
  labelString: "master"
  mode: NORMAL
  numExecutors: 2
  primaryView:
    all:
      name: "all"
  quietPeriod: 5
  scmCheckoutRetryCount: 0
  securityRealm:
    local:
      allowsSignup: false
      enableCaptcha: false
      users:
      - id: "admin"
  slaveAgentPort: 50000
  views:
  - all:
      name: "all"
unclassified:
  bitbucketendpointconfiguration:
    endpoints:
    - bitbucketCloudEndpoint:
        manageHooks: false
  jiraprojectproperty:
    sites: "FAILED TO EXPORT hudson.plugins.jira.JiraProjectProperty$DescriptorImpl#sites:\
      \ \nio.jenkins.plugins.casc.ConfiguratorException: Can't read attribute 'url'\
      \ from [Lhudson.plugins.jira.JiraSite;@79de9562\n\tat io.jenkins.plugins.casc.Attribute._getValue(Attribute.java:246)\n\
      \tat io.jenkins.plugins.casc.Attribute.getValue(Attribute.java:166)\n\tat io.jenkins.plugins.casc.impl.configurators.DataBoundConfigurator.describe(DataBoundConfigurator.java:237)\n\
      \tat io.jenkins.plugins.casc.Attribute.describe(Attribute.java:188)\n\tat io.jenkins.plugins.casc.BaseConfigurator.compare(BaseConfigurator.java:368)\n\
      \tat io.jenkins.plugins.casc.impl.configurators.DescriptorConfigurator.describe(DescriptorConfigurator.java:65)\n\
      \tat io.jenkins.plugins.casc.impl.configurators.GlobalConfigurationCategoryConfigurator.describe(GlobalConfigurationCategoryConfigurator.java:94)\n\
      \tat io.jenkins.plugins.casc.impl.configurators.GlobalConfigurationCategoryConfigurator.lambda$describe$6(GlobalConfigurationCategoryConfigurator.java:87)\n\
      \tat java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)\n\
      \tat java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:175)\n\
      \tat java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:175)\n\
      \tat java.util.Iterator.forEachRemaining(Iterator.java:116)\n\tat java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)\n\
      \tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)\n\
      \tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)\n\
      \tat java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)\n\
      \tat java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)\n\
      \tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\
      \tat java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:418)\n\
      \tat io.jenkins.plugins.casc.impl.configurators.GlobalConfigurationCategoryConfigurator.describe(GlobalConfigurationCategoryConfigurator.java:87)\n\
      \tat io.jenkins.plugins.casc.impl.configurators.GlobalConfigurationCategoryConfigurator.describe(GlobalConfigurationCategoryConfigurator.java:30)\n\
      \tat io.jenkins.plugins.casc.ConfigurationAsCode.export(ConfigurationAsCode.java:405)\n\
      \tat io.jenkins.plugins.casc.ConfigurationAsCode.doExport(ConfigurationAsCode.java:395)\n\
      \tat java.lang.invoke.MethodHandle.invokeWithArguments(MethodHandle.java:627)\n\
      \tat org.kohsuke.stapler.Function$MethodFunction.invoke(Function.java:343)\n\
      \tat org.kohsuke.stapler.interceptor.RequirePOST$Processor.invoke(RequirePOST.java:77)\n\
      \tat org.kohsuke.stapler.PreInvokeInterceptedFunction.invoke(PreInvokeInterceptedFunction.java:26)\n\
      \tat org.kohsuke.stapler.Function.bindAndInvoke(Function.java:184)\n\tat org.kohsuke.stapler.Function.bindAndInvokeAndServeResponse(Function.java:117)\n\
      \tat org.kohsuke.stapler.MetaClass$1.doDispatch(MetaClass.java:129)\n\tat org.kohsuke.stapler.NameBasedDispatcher.dispatch(NameBasedDispatcher.java:58)\n\
      \tat org.kohsuke.stapler.Stapler.tryInvoke(Stapler.java:715)\n\tat org.kohsuke.stapler.Stapler.invoke(Stapler.java:845)\n\
      \tat org.kohsuke.stapler.MetaClass$10.dispatch(MetaClass.java:374)\n\tat org.kohsuke.stapler.Stapler.tryInvoke(Stapler.java:715)\n\
      \tat org.kohsuke.stapler.Stapler.invoke(Stapler.java:845)\n\tat org.kohsuke.stapler.Stapler.invoke(Stapler.java:649)\n\
      \tat org.kohsuke.stapler.Stapler.service(Stapler.java:238)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:790)\n\
      \tat org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:860)\n\
      \tat org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1650)\n\
      \tat hudson.util.PluginServletFilter$1.doFilter(PluginServletFilter.java:154)\n\
      \tat org.jenkinsci.plugins.ssegateway.Endpoint$SSEListenChannelFilter.doFilter(Endpoint.java:225)\n\
      \tat hudson.util.PluginServletFilter$1.doFilter(PluginServletFilter.java:151)\n\
      \tat io.jenkins.blueocean.ResourceCacheControl.doFilter(ResourceCacheControl.java:134)\n\
      \tat hudson.util.PluginServletFilter$1.doFilter(PluginServletFilter.java:151)\n\
      \tat io.jenkins.blueocean.auth.jwt.impl.JwtAuthenticationFilter.doFilter(JwtAuthenticationFilter.java:61)\n\
      \tat hudson.util.PluginServletFilter$1.doFilter(PluginServletFilter.java:151)\n\
      \tat hudson.util.PluginServletFilter.doFilter(PluginServletFilter.java:157)\n\
      \tat org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1637)\n\
      \tat hudson.security.csrf.CrumbFilter.doFilter(CrumbFilter.java:99)\n\tat org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1637)\n\
      \tat hudson.security.ChainedServletFilter$1.doFilter(ChainedServletFilter.java:84)\n\
      \tat hudson.security.UnwrapSecurityExceptionFilter.doFilter(UnwrapSecurityExceptionFilter.java:51)\n\
      \tat hudson.security.ChainedServletFilter$1.doFilter(ChainedServletFilter.java:87)\n\
      \tat jenkins.security.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:117)\n\
      \tat hudson.security.ChainedServletFilter$1.doFilter(ChainedServletFilter.java:87)\n\
      \tat org.acegisecurity.providers.anonymous.AnonymousProcessingFilter.doFilter(AnonymousProcessingFilter.java:125)\n\
      \tat hudson.security.ChainedServletFilter$1.doFilter(ChainedServletFilter.java:87)\n\
      \tat org.acegisecurity.ui.rememberme.RememberMeProcessingFilter.doFilter(RememberMeProcessingFilter.java:142)\n\
      \tat hudson.security.ChainedServletFilter$1.doFilter(ChainedServletFilter.java:87)\n\
      \tat org.acegisecurity.ui.AbstractProcessingFilter.doFilter(AbstractProcessingFilter.java:271)\n\
      \tat hudson.security.ChainedServletFilter$1.doFilter(ChainedServletFilter.java:87)\n\
      \tat jenkins.security.BasicHeaderProcessor.doFilter(BasicHeaderProcessor.java:93)\n\
      \tat hudson.security.ChainedServletFilter$1.doFilter(ChainedServletFilter.java:87)\n\
      \tat org.acegisecurity.context.HttpSessionContextIntegrationFilter.doFilter(HttpSessionContextIntegrationFilter.java:249)\n\
      \tat hudson.security.HttpSessionContextIntegrationFilter2.doFilter(HttpSessionContextIntegrationFilter2.java:67)\n\
      \tat hudson.security.ChainedServletFilter$1.doFilter(ChainedServletFilter.java:87)\n\
      \tat hudson.security.ChainedServletFilter.doFilter(ChainedServletFilter.java:90)\n\
      \tat hudson.security.HudsonFilter.doFilter(HudsonFilter.java:171)\n\tat org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1637)\n\
      \tat org.kohsuke.stapler.compression.CompressionFilter.doFilter(CompressionFilter.java:49)\n\
      \tat org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1637)\n\
      \tat hudson.util.CharacterEncodingFilter.doFilter(CharacterEncodingFilter.java:82)\n\
      \tat org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1637)\n\
      \tat org.kohsuke.stapler.DiagnosticThreadNameFilter.doFilter(DiagnosticThreadNameFilter.java:30)\n\
      \tat org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1637)\n\
      \tat org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:533)\n\
      \tat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:143)\n\
      \tat org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:524)\n\
      \tat org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132)\n\
      \tat org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:190)\n\
      \tat org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:1595)\n\
      \tat org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:188)\n\
      \tat org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1253)\n\
      \tat org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:168)\n\
      \tat org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:473)\n\
      \tat org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:1564)\n\
      \tat org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:166)\n\
      \tat org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1155)\n\
      \tat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)\n\
      \tat org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132)\n\
      \tat org.eclipse.jetty.server.Server.handle(Server.java:530)\n\tat org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:347)\n\
      \tat org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:256)\n\
      \tat org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:279)\n\
      \tat org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:102)\n\tat\
      \ org.eclipse.jetty.io.ChannelEndPoint$2.run(ChannelEndPoint.java:124)\n\tat\
      \ org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:247)\n\
      \tat org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.produce(EatWhatYouKill.java:140)\n\
      \tat org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:131)\n\
      \tat org.eclipse.jetty.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:382)\n\
      \tat winstone.BoundedExecutorService$1.run(BoundedExecutorService.java:77)\n\
      \tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\
      \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\
      \tat java.lang.Thread.run(Thread.java:748)\n"
tool:
  git:
    installations:
    - home: "git"
      name: "Default"
  jdk:
    defaultProperties:
    - installSource:
        installers:
        - jdkInstaller:
            acceptLicense: false
